// File: _navigation.scss

nav {
  background-color: inherit; // Define explicitly for children to inherit
}

// Navbar
//

// Fixed navbar
.navbar {
  position: fixed;
  top: 0;
  right: 0;
  left: 0;
  display: flex;
  flex-wrap: wrap;
  align-items: center; // center content vertically
  justify-content: space-between;
  min-height: $init-nav-height;
  z-index: 1030;
  background-color: inherit;
  transition: top $transition-normal ease-in-out; // For hide/show on scroll.

  // Redeclare flex properties if using a container inside of the navbar
  // flex properties are not inherited.
  // %container-flex-properties { // Example only. Modify or remove after.
  //   display: flex;
  //   flex-wrap: wrap;
  //   align-items: center;
  //   justify-content: space-between;
  // }

  .ul {
    height: 0;
    overflow: hidden;
  }
}

// For hide/show on scroll. TODO: rename to .navbar-up here and in js;
.nav-up {
  top: -$init-nav-height;
}

// Navbar nav
//

// Responsive collapsing and toggling of navbar content
// 1. When collapsed, prevents contents from default inline orientation.
// requires `flex-wrap: wrap` on the `.navbar` parent.
.navbar-nav {
  display: flex;
  flex-direction: column;
  flex-basis: 100%; // 1
  flex-grow: 1; // 1
  align-items: flex-end;
  position: fixed;
  bottom: 0;
  right: 0;
  overflow: hidden;
  height: 100%;
  width: 0;
  padding: $init-nav-height 0;
  background: $white;
  z-index: 1029;
  transition: width $transition-lazy ease-in-out;
}

// Inherit flex properties from parent.
.nav-contents {
  display: inherit;
  flex-direction: inherit;
  align-items: inherit;
  min-height: 100%;
  padding: $rhythm-unit;
}

.nav-item {
  font-family: $font-accent;
  font-size: 1.5rem;
  line-height: $rhythm-unit;
  margin-bottom: $rhythm-unit;
}
.navbar-brand {
  margin: 0 $rhythm-unit;
  font-family: $font-accent;
  font-size: 1rem;
  line-height: $rhythm-unit;
}

.nav-toggler {
  margin: 0 $rhythm-unit;
  border: none;
  font-size: 0;
  z-index: 1035;

  &:hover {
    cursor: pointer;
  }

  .hamburger {
    display: inline-block;
    width: 22px;
    height: 2px;
    background-color: $black;
    position: relative;
    top: 0;
    transform: translateY(50%);
    transition: background $transition-easy ease;

    &:before, &:after {
    content: '';
    width: 100%;
    height: 100%;
    position: absolute;
    background-color: $black;
    transform: none;
    backface-visibility: hidden;
    transition: transform $transition-easy, background $transition-easy ease;
    }

    &:before {
    transform: translateX(-2px) translateY(-6px) rotate(0deg);
    }

    &:after {
    transform: translateX(-5px) translateY(6px) rotate(0deg);
    }
  }
}

// Open nav state
html.nav-is-open {

  .navbar-nav {
    width: 100%;

    @include respond-to(md) {
      width: 33.33%;
    }
  }

  // Animates hamburger to x
  .hamburger {
    background-color: transparent;
    transition: background $transition-quick ease;
  }

  .hamburger:before {
    width: 90%;
    transform: translateX(0) translateY(0) rotate(45deg);
  }

  .hamburger:after {
    width: 90%;
    transform: translateX(0) translateY(0) rotate(-45deg);
  }
}